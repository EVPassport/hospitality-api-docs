{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Xchange Interface OXI API",
    "description": "APIs to create and manage OPERA Xchange Interface (OXI) configurations for OPERA Cloud Exchange module functionality.<br /><br /> Compatible with OPERA Cloud release 23.0.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p>",
    "version": "23.0.0.0",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/oxi/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/automaticTransmissionSchedules": {
      "post": {
        "summary": "Create Automatic Transmission Schedules",
        "description": "API to Create Automatic Transmission Schedules. <p><strong>OperationId:</strong>postAutomaticTransmissionSchedules</p>",
        "operationId": "postAutomaticTransmissionSchedules",
        "parameters": [
          {
            "name": "automaticTransmissionSchedulesToBeCreated",
            "in": "body",
            "required": true,
            "description": "Request object to create automatic transmission schedules",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/automaticTransmissionSchedulesToBeCreated"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/communicationMethods": {
      "put": {
        "summary": "Modify Communication Methods ",
        "description": "API to Modify Communication Methods. <p><strong>OperationId:</strong>putCommunicationMethods</p>",
        "operationId": "putCommunicationMethods",
        "parameters": [
          {
            "name": "communicationMethodsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying Communication Methods.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/communicationMethodsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedCommunicationMethods"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/conversionCodeMappingID/{id}/conversionCodeMapping": {
      "delete": {
        "summary": "Remove Conversion Codes Mappings",
        "description": "API to Delete  Interface Mapping Conversion Codes by Conversion Code Mapping Id. <p><strong>OperationId:</strong>deleteConversionCodeMappings</p>",
        "operationId": "deleteConversionCodeMappings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a Conversion Code Mapping in OPERA."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/conversionCodesStatus": {
      "put": {
        "summary": "Change Conversion codes Status",
        "description": "API to Modify Interface Mapping UDF Conversion Codes. <p><strong>OperationId:</strong>putConversionCodesStatus</p>",
        "operationId": "putConversionCodesStatus",
        "parameters": [
          {
            "name": "conversionCodesStatusToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request to change the status of given Conversion Codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/conversionCodesStatusToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedConversionCodesStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/externalInterfaceSetups": {
      "post": {
        "summary": "Create Interface Setup details",
        "description": "API to Create Interface Setup configuration. <p><strong>OperationId:</strong>postExternalInterfaceSetups</p>",
        "operationId": "postExternalInterfaceSetups",
        "parameters": [
          {
            "name": "externalInterfaceSetupsToBeCreated",
            "in": "body",
            "required": true,
            "description": "Request to create External Interface Setups",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/externalInterfaceSetupsToBeCreated"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{externalHotelCode}/interfaces/{interfaceId}/integrationSystems/{integrationSystem}/integrationInboundMessages": {
      "get": {
        "summary": "Fetch integration inbound messages ",
        "description": "API to Fetch Inbound Messages From External System by Hotel Id, Interface Id. <p><strong>OperationId:</strong>getIntegrationInboundMessages</p>",
        "operationId": "getIntegrationInboundMessages",
        "parameters": [
          {
            "name": "integrationSystem",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA IntegrationSystem used to identify a IntegrationSystem in OPERA."
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "externalHotelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique External hotel ID used to identify a external Hotel in OPERA."
          },
          {
            "name": "externalHotelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false,
            "description": "Unique External hotel IDs used to identify external Hotel in OPERA"
          },
          {
            "name": "messageTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Sepcify Message type to restrict results",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeReviewed",
            "in": "query",
            "required": false,
            "description": "If true, messages that are marked as reviewed will also be fetched",
            "type": "boolean"
          },
          {
            "name": "fromMessageID",
            "in": "query",
            "required": false,
            "description": "The starting value of the range",
            "type": "string"
          },
          {
            "name": "toMessageID",
            "in": "query",
            "required": false,
            "description": "The ending value of the range",
            "type": "string"
          },
          {
            "name": "messageStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Specify Integration message reference value to restrict results",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "messageReference",
            "in": "query",
            "required": false,
            "description": "Specify Integration message reference value to restrict results",
            "type": "string"
          },
          {
            "name": "errorMessageWildCard",
            "in": "query",
            "required": false,
            "description": "Specify partial or complete error message to restrict results",
            "type": "string"
          },
          {
            "name": "errorMessageType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This value is only applicable for outbound messages",
            "uniqueItems": true,
            "enum": [
              "Error",
              "ResultException",
              "OptionalWarning",
              "Warning"
            ]
          },
          {
            "name": "msgContains",
            "in": "query",
            "required": false,
            "description": "String to search inside a message. User can specify multiple strings separated by comma",
            "type": "string"
          },
          {
            "name": "anyOneOfTheMsg",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "If true then results with message that has at least one of the string specified for message contains will be returned.",
            "type": "boolean"
          },
          {
            "name": "valuesOnly",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "If true then passed string will be matched against the node values of the XML message",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "includeErrors",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "If true then errors and warnings will be fetched for action id and other criteria mentioned",
            "type": "boolean"
          },
          {
            "name": "actionId",
            "in": "query",
            "required": false,
            "description": "Action ID for which errors and warnings should be fetched",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch integration outbound messages",
            "schema": {
              "$ref": "#/definitions/fetchIntegrationInboundMessages"
            }
          },
          "204": {
            "description": "IntegrationInboundMessages not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/automaticTransmissionSchedules": {
      "get": {
        "summary": "Fetch Automatic Transmission Schedules",
        "description": "API to Fetch Automatic Transmission Schedules by Hotel Id. <p><strong>OperationId:</strong>getAutomaticTransmissionSchedules</p>",
        "operationId": "getAutomaticTransmissionSchedules",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a hotel in OPERA."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "interfaceList",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Interfaces configured for automatic transmission schedules",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "If true, this flag will set the criteria to return Inactive records along with active records.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch automatic transmission schedules",
            "schema": {
              "$ref": "#/definitions/fetchAutomaticTransmissionSchedules"
            }
          },
          "204": {
            "description": "AutomaticTransmissionSchedules not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      },
      "put": {
        "summary": "Change Automatic Transmission Schedules",
        "description": "API to Modify  Automatic Transmission Schedules by Hotel Id. <p><strong>OperationId:</strong>putAutomaticTransmissionSchedules</p>",
        "operationId": "putAutomaticTransmissionSchedules",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a hotel in OPERA."
          },
          {
            "name": "automaticTransmissionSchedulesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object to change automatic transmission schedules",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/automaticTransmissionSchedulesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedAutomaticTransmissionSchedules"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/intefaces/{interfaceId}/conversionCodes": {
      "get": {
        "summary": "Fetch Conversion Codes",
        "description": "API to Fetch Interface Mappings UDF Conversion Codes by Hotel Id and Interface Id. <p><strong>OperationId:</strong>getConversionCodes</p>",
        "operationId": "getConversionCodes",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to find interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a Hotel in OPERA."
          },
          {
            "name": "integrationSystem",
            "in": "query",
            "enum": [
              "Central",
              "Property",
              "Both"
            ],
            "x-example": "Central, Property, Both",
            "required": false,
            "type": "string",
            "description": "Represents both OXI and OXI HUB are installed.",
            "uniqueItems": true
          },
          {
            "name": "conversionCode",
            "in": "query",
            "required": false,
            "description": "Type of Conversion Code or user-defined function (UDF) module name configured in the system.",
            "type": "string"
          },
          {
            "name": "udfCode",
            "in": "query",
            "required": false,
            "description": "A flag that is true if the conversion code is an user-defined function (UDF) module code.",
            "type": "boolean"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "A flag to indicate whether to include inactive Conversion Codes.",
            "type": "boolean"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "description": "XML Type by which the Conversion Codes should be filtered.",
            "type": "string"
          },
          {
            "name": "includeUDFCodes",
            "in": "query",
            "required": false,
            "description": "A flag to indicate whether user-defined function (UDF) module names should be included in the results or not.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to fetch Conversion Codes.",
            "schema": {
              "$ref": "#/definitions/fetchConversionCodes"
            }
          },
          "204": {
            "description": "ConversionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/accumulatedBusinessEvents": {
      "get": {
        "summary": "Fetch accumulated business events",
        "description": "API to Fetch  Accumulated Business Event Messages for External Systems by Hotel Id, Interface Id. <p><strong>OperationId:</strong>getAccumulatedBusinessEvents</p>",
        "operationId": "getAccumulatedBusinessEvents",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a Hotel in OPERA."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "modules",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Accumulated Business Event Module",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Availability",
                "Block",
                "BlockDetail",
                "BlockHeader",
                "Rate",
                "Reservation",
                "Restriction"
              ]
            },
            "required": false
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "primaryKey",
            "in": "query",
            "required": false,
            "description": "Specify primary key identifier to search for",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "State of Accumulated Business Event",
            "uniqueItems": true,
            "enum": [
              "New",
              "Ready"
            ]
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "integrationSystem",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Represents both OXI and OXI HUB are installed.",
            "uniqueItems": true,
            "enum": [
              "Central",
              "Property",
              "Both"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch accumulated business events",
            "schema": {
              "$ref": "#/definitions/fetchAccumulatedBusinessEvents"
            }
          },
          "204": {
            "description": "AccumulatedBusinessEvents not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/conversionCode/{conversionCode}/ID/{id}/operaValue/{operaValue}/externalValue/{externalValue}/conversionCodeMapping": {
      "put": {
        "summary": "Change Conversion Codes Mappings",
        "description": "API to Modify  Interface Mapping  Conversion Codes by Hotel Id, Interface Id and Conversion Code Id with OPERA value and External value. <p><strong>OperationId:</strong>putConversionCodeMappings</p>",
        "operationId": "putConversionCodeMappings",
        "parameters": [
          {
            "name": "externalValue",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "EXTERNAL Conversion Code value."
          },
          {
            "name": "operaValue",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "PMS Conversion Code value."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a Conversion Code Mapping in OPERA."
          },
          {
            "name": "conversionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Conversion Code in OPERA."
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a Hotel in OPERA."
          },
          {
            "name": "conversionCodeMappingsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request to update existing Conversion Code Mappings.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/conversionCodeMappingsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for updating Conversion Code Mappings.",
            "schema": {
              "$ref": "#/definitions/changedConversionCodeMappings"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/conversionCode/{conversionCode}/operaValue/{operaValue}/externalValue/{externalValue}/conversionCodeMapping": {
      "post": {
        "summary": "Create Conversion Codes Mappings",
        "description": "API to Create  Interface Mapping Conversion Codes by Hotel Id, Interface Id and Conversion Code with OPERA value and External value. <p><strong>OperationId:</strong>postConversionCodeMappings</p>",
        "operationId": "postConversionCodeMappings",
        "parameters": [
          {
            "name": "externalValue",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "EXTERNAL Conversion Code value."
          },
          {
            "name": "operaValue",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "PMS Conversion Code value."
          },
          {
            "name": "conversionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Conversion Code in OPERA."
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a Hotel in OPERA."
          },
          {
            "name": "conversionCodeMappingsToBeCreated",
            "in": "body",
            "required": true,
            "description": "Request to create Conversion Code Mappings.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/conversionCodeMappingsToBeCreated"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for creating Conversion Code Mappings.",
            "schema": {
              "$ref": "#/definitions/createdConversionCodeMappings"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/conversionCode/{conversionCode}/operaValue/{operaValue}/udfMapping": {
      "delete": {
        "summary": "Remove UDF Mappings",
        "description": "API to Delete Interface Mapping UDF Conversion Codes by Hotel Id, Interface Id and Conversion Code. <p><strong>OperationId:</strong>deleteUDFMappings</p>",
        "operationId": "deleteUDFMappings",
        "parameters": [
          {
            "name": "operaValue",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "PMS Conversion Code value."
          },
          {
            "name": "conversionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Conversion Code in OPERA."
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a Hotel in OPERA."
          },
          {
            "name": "profileType",
            "in": "query",
            "required": false,
            "description": "Profile type of the user-defined function (UDF) definition.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/conversions/{conversionCode}/conversionCodeMapping": {
      "get": {
        "summary": "Fetch Conversion Code Mappings",
        "description": "API to Fetch Interface Mapping  Conversion Codes by Hotel Id, Interface Id and Conversion Code. <p><strong>OperationId:</strong>getConversionCodeMappings</p>",
        "operationId": "getConversionCodeMappings",
        "parameters": [
          {
            "name": "conversionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Conversion Code in OPERA."
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a Hotel in OPERA."
          },
          {
            "name": "integrationSystem",
            "in": "query",
            "enum": [
              "Central",
              "Property",
              "Both"
            ],
            "x-example": "Central, Property, Both",
            "required": false,
            "type": "string",
            "description": "Represents both OXI and OXI HUB are installed.",
            "uniqueItems": true
          },
          {
            "name": "udfCode",
            "in": "query",
            "default": "false",
            "x-example": "true, false",
            "required": false,
            "description": "A flag that is true if the conversion code is an user-defined function (UDF) module code.",
            "type": "boolean"
          },
          {
            "name": "mappingValue",
            "in": "query",
            "required": false,
            "description": "This value is used for wild card search on OPERA Code/External code.",
            "type": "string"
          },
          {
            "name": "searchBy",
            "in": "query",
            "enum": [
              "OperaValue",
              "ExternalValue",
              "Both"
            ],
            "x-example": "OperaValue, ExternalValue, Both",
            "required": false,
            "type": "string",
            "description": "Search for both OPERA and External mapping value.",
            "uniqueItems": true
          },
          {
            "name": "includeGlobal",
            "in": "query",
            "default": true,
            "x-example": "true, false",
            "required": false,
            "description": "A flag to indicate whether to include Global Mappings or not.",
            "type": "boolean"
          },
          {
            "name": "profileType",
            "in": "query",
            "required": false,
            "description": "Profile type by which the user-defined function (UDF) mappings should be filtered.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to fetch Conversion Code Mappings.",
            "schema": {
              "$ref": "#/definitions/fetchConversionCodeMappings"
            }
          },
          "204": {
            "description": "ConversionCodeMappings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/externalInterfaceSetups": {
      "delete": {
        "summary": "Delete external Interface Setup details",
        "description": "API to Delete Interface Setup configuration by Hotel Id and Interface Id. <p><strong>OperationId:</strong>deleteExternalInterfaceSetups</p>",
        "operationId": "deleteExternalInterfaceSetups",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to find interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to find hotel in OPERA."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/integrationSystems/{integrationSystem}/integrationOutboundMessages": {
      "get": {
        "summary": "fetch integration outbound messages",
        "description": "API to Fetch Outbound Messages To External System by Hotel Id, Interface Id. <p><strong>OperationId:</strong>getIntegrationOutboundMessages</p>",
        "operationId": "getIntegrationOutboundMessages",
        "parameters": [
          {
            "name": "integrationSystem",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA IntegrationSystem used to identify a IntegrationSystem in OPERA."
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a Hotel in OPERA."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "actionType",
            "in": "query",
            "required": false,
            "description": "Specify action(that has triggered the creation of message) to restrict results",
            "type": "string"
          },
          {
            "name": "errorMessageWildCard",
            "in": "query",
            "required": false,
            "description": "Specify partial or complete error message to restrict results",
            "type": "string"
          },
          {
            "name": "errorMessageType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This value is only applicable for outbound messages",
            "uniqueItems": true,
            "enum": [
              "Error",
              "ResultException",
              "OptionalWarning",
              "Warning"
            ]
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeReviewed",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "If true, messages that are marked as reviewed will also be fetched",
            "type": "boolean"
          },
          {
            "name": "fromMessageID",
            "in": "query",
            "required": false,
            "description": "The starting value of the range",
            "type": "string"
          },
          {
            "name": "toMessageID",
            "in": "query",
            "required": false,
            "description": "The ending value of the range",
            "type": "string"
          },
          {
            "name": "messageStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Specify Integration message reference value to restrict results",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "msgContains",
            "in": "query",
            "required": false,
            "description": "String to search inside a message. User can specify multiple strings separated by comma",
            "type": "string"
          },
          {
            "name": "anyOneOfTheMsg",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "If true then results with message that has at least one of the string specified for message contains will be returned.",
            "type": "boolean"
          },
          {
            "name": "valuesOnly",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "If true then passed string will be matched against the node values of the XML message",
            "type": "boolean"
          },
          {
            "name": "messageReference",
            "in": "query",
            "required": false,
            "description": "Specify Integration message reference value to restrict results",
            "type": "string"
          },
          {
            "name": "messageTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Sepcify Message type to restrict results",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "includeErrors",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "If true then errors and warnings will be fetched for action id and other criteria mentioned",
            "type": "boolean"
          },
          {
            "name": "actionId",
            "in": "query",
            "required": false,
            "description": "Action ID for which errors and warnings should be fetched",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch integration outbound messages",
            "schema": {
              "$ref": "#/definitions/fetchIntegrationOutboundMessages"
            }
          },
          "204": {
            "description": "IntegrationOutboundMessages not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/interfaceControls": {
      "get": {
        "summary": "Retrieve OXI Parameters and Defaults",
        "description": "API to Fetch  Interface Controls  by Hotel Id and Interface Id <p><strong>OperationId:</strong>getInterfaceControls</p>",
        "operationId": "getInterfaceControls",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a Hotel in OPERA."
          },
          {
            "name": "integrationSystem",
            "in": "query",
            "enum": [
              "Central",
              "Property",
              "Both"
            ],
            "x-example": "Central, Property, Both",
            "required": false,
            "type": "string",
            "description": "Represents both OXI and OXI HUB are installed.",
            "uniqueItems": true
          },
          {
            "name": "croCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameterNameWildCard",
            "in": "query",
            "x-example": "HANDLE_PSEUDO_ROOMTYPES",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response Object for fetching OXI Parameters/Settings.",
            "schema": {
              "$ref": "#/definitions/fetchInterfaceControls"
            }
          },
          "204": {
            "description": "InterfaceControls not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/profiles/{profileType}/profileMatchRules": {
      "delete": {
        "summary": "Delete profile match rules",
        "description": "API to Delete  Profile Match Rules by Hotel Id, Interface Id and Profile Type. <p><strong>OperationId:</strong>deleteProfileMatchRules</p>",
        "operationId": "deleteProfileMatchRules",
        "parameters": [
          {
            "name": "profileType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Profile in OPERA."
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an hotel in OPERA."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/messageStatistics": {
      "get": {
        "summary": "Retrieves the statistics of Messages for Opera Exchange Interface.",
        "description": "API to Fetch OXI Dashboard Tile Statistics (Upload and Download message counts by Success, Fail and Warning Status codes) by Hotel Id and Interface Id. <p><strong>OperationId:</strong>getMessageStatistics</p>",
        "operationId": "getMessageStatistics",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to find hotel in OPERA."
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Supported Exchange Interface report codes.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "UploadedMessages",
                "DownloadedMessages"
              ]
            },
            "required": false
          },
          {
            "name": "endDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "End date of the report.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Start date of the report.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "statCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Supported Exchange Interface statistical codes.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Success",
                "Failed",
                "Warning",
                "Total"
              ]
            },
            "required": false
          },
          {
            "name": "interfaceId",
            "in": "query",
            "required": false,
            "description": "ID of the Interface Setup",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response element for Downloaded Messages statistics.",
            "schema": {
              "$ref": "#/definitions/messageStatistics"
            }
          },
          "204": {
            "description": "MessageStatistics not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceStats"
        ]
      }
    },
    "/hotels/{hotelId}/queues/{queueName}/messageStatistics": {
      "get": {
        "summary": "Retrieves the statistics of Messages in inbound,outbound and BE queues.",
        "description": "API to retrieve message statistics for inbound , outbound and business event queues. <p><strong>OperationId:</strong>getOXIMessageStatistics</p>",
        "operationId": "getOXIMessageStatistics",
        "parameters": [
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Queue name from which Message statistics has to be fetched.",
            "enum": [
              "Inbound",
              "Outbound",
              "Be"
            ]
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to find hotel in OPERA."
          },
          {
            "name": "messageStatus",
            "in": "query",
            "default": "Ready",
            "required": true,
            "type": "string",
            "description": "Supported Message Status.",
            "uniqueItems": true,
            "enum": [
              "Processed",
              "Failed",
              "Ready",
              "Expired"
            ]
          },
          {
            "name": "InterfaceId",
            "in": "query",
            "required": false,
            "description": "InterfaceID for which Message statistics has to be fetched.",
            "type": "string"
          },
          {
            "name": "enqueueEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enqueueStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "groupByModuleAndActionType",
            "in": "query",
            "required": false,
            "description": "Attribute that decides whether the results must be grouped additionally by Module and Action type of the messages.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response elements for Messages statistics.",
            "schema": {
              "$ref": "#/definitions/OXIMessageStatistics"
            }
          },
          "204": {
            "description": "OXIMessageStatistics not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceStats"
        ]
      }
    },
    "/intefaces/{interfaceId}/communicationMethods": {
      "get": {
        "summary": "Fetch Communication Methods",
        "description": "API to Fetch Communication Methods. <p><strong>OperationId:</strong>getCommunicationMethods</p>",
        "operationId": "getCommunicationMethods",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to find interface in OPERA."
          },
          {
            "name": "isGlobal",
            "in": "query",
            "required": true,
            "description": "SID Resort",
            "type": "boolean"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          {
            "name": "interfaceIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "InterfaceID",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to fetch Communication Methods",
            "schema": {
              "$ref": "#/definitions/fetchCommunicationMethods"
            }
          },
          "204": {
            "description": "CommunicationMethods not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/interfaceSetups": {
      "get": {
        "summary": "fetch external Interface Setup details",
        "description": "API to Fetch Interface Setup configurations by Interface Ids and Hotel Ids. <p><strong>OperationId:</strong>getExternalInterfaceSetups</p>",
        "operationId": "getExternalInterfaceSetups",
        "parameters": [
          {
            "name": "interfaceIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "InterfaceID",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeXmlVersion",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Attribute that decides whether the search results include the XML Schema version details",
            "type": "boolean"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Represents both OXI and OXI HUB are installed.",
            "uniqueItems": true,
            "enum": [
              "Central",
              "Property",
              "Both"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to fetch External Interface Setups",
            "schema": {
              "$ref": "#/definitions/fetchExternalInterfaceSetups"
            }
          },
          "204": {
            "description": "ExternalInterfaceSetups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      },
      "put": {
        "summary": "Modify external Interface Setup details",
        "description": "API to Modify  Interface Setup configuration. <p><strong>OperationId:</strong>putExternalInterfaceSetups</p>",
        "operationId": "putExternalInterfaceSetups",
        "parameters": [
          {
            "name": "externalInterfaceSetupsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request to change External Interface Setups",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/externalInterfaceSetupsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedExternalInterfaceSetups"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/interfaces/{interfaceId}/hotels/{hotelId}/queues/{queueName}/dequeueOXIMessages": {
      "delete": {
        "summary": "Purge the messages from OXI inbound and outbound queues.",
        "description": "API to purge messages from inbound and outbound queues. <p><strong>OperationId:</strong>dequeueOXIMessages</p>",
        "operationId": "dequeueOXIMessages",
        "parameters": [
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Queue name from which messages has to be Dequeued.",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to find hotel in OPERA."
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA.."
          },
          {
            "name": "messageStatus",
            "in": "query",
            "x-example": "Ready",
            "required": true,
            "type": "string",
            "description": "Supported Message Status.",
            "uniqueItems": true,
            "enum": [
              "Processed",
              "Failed",
              "Ready",
              "Expired"
            ]
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "module",
            "in": "query",
            "required": false,
            "description": "Module of the messages.",
            "type": "string"
          },
          {
            "name": "actionType",
            "in": "query",
            "required": false,
            "description": "Action Type of the messages.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceStats"
        ]
      }
    },
    "/interfaces/{interfaceId}/interfaceControls": {
      "put": {
        "summary": "Change OXI Parameters and Defaults",
        "description": "API to Modify Interface Controls by Interface Id. <p><strong>OperationId:</strong>putInterfaceControls</p>",
        "operationId": "putInterfaceControls",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "interfaceControlsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing one or more OXI Parameters/Settings.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/interfaceControlsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedInterfaceControls"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/interfaces/{interfaceId}/legacyInterfaceStatus": {
      "get": {
        "summary": "Fetch legacy interface status",
        "description": "API to Fetch legacy OXI Interface Processor Status by Interface Id. <p><strong>OperationId:</strong>getLegacyInterfaceStatus</p>",
        "operationId": "getLegacyInterfaceStatus",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to find interface in OPERA."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch legacy interface status.",
            "schema": {
              "$ref": "#/definitions/legacyInterfaceStatusDetails"
            }
          },
          "204": {
            "description": "LegacyInterfaceStatus not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/interfaces/{interfaceId}/profileMatchRules": {
      "get": {
        "summary": "Fetch profile match rules",
        "description": "API to Fetch Profile Match Rules by Interface Id and Hotel Id. <p><strong>OperationId:</strong>getProfileMatchRules</p>",
        "operationId": "getProfileMatchRules",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify an Interface in OPERA."
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          {
            "name": "includeXmlVersions",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Attribute that decides whether the search results include the XML Schema version details",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object which contains profile match rules",
            "schema": {
              "$ref": "#/definitions/fetchProfileMatchRules"
            }
          },
          "204": {
            "description": "ProfileMatchRules not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/lovCode/{lovCode}/listOfValuesOXI": {
      "get": {
        "summary": "Fetch list of values details for OXI",
        "description": "API to Fetch list of values for all OXI interface type External Systems. <p><strong>OperationId:</strong>getOXIListOfValues</p>",
        "operationId": "getOXIListOfValues",
        "parameters": [
          {
            "name": "lovCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OXI LOVName in OPERA."
          },
          {
            "name": "integrationSystem",
            "in": "query",
            "enum": [
              "Central",
              "Property",
              "Both"
            ],
            "x-example": "Central, Property, Both",
            "required": false,
            "type": "string",
            "description": "Represents both OXI and OXI HUB are installed.",
            "uniqueItems": true
          },
          {
            "name": "includeInActive",
            "in": "query",
            "default": "false",
            "enum": [
              "True",
              "False"
            ],
            "x-example": "true ,false",
            "required": false,
            "description": "Only useful for LOVs that support toggle of inactive records inclusion. When set to true, inactive records will be included.",
            "type": "boolean"
          },
          {
            "name": "parameterNames",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Name of the parameter.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "parameterValues",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Value of the parameter.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to fetch External Interface Setups",
            "schema": {
              "$ref": "#/definitions/fetchOXIListOfValues"
            }
          },
          "204": {
            "description": "OXIListOfValues not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/messages/{messageId}/automaticTransmissionSchedules": {
      "delete": {
        "summary": "Remove Automatic Transmission Schedules",
        "description": "API to Delete  Automatic Transmission Schedules by Scheduled Message Id. <p><strong>OperationId:</strong>deleteAutomaticTransmissionSchedules</p>",
        "operationId": "deleteAutomaticTransmissionSchedules",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to identify a hotel in OPERA."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    },
    "/messages/{messageId}/integrationMessageAttachments": {
      "get": {
        "summary": "Fetch integration message attachments",
        "description": "API to Fetch OXI Inbound/Outbound XML Message Content by Message Id. <p><strong>OperationId:</strong>getIntegrationMessageAttachments</p>",
        "operationId": "getIntegrationMessageAttachments",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to find inbound/outbound Message in OPERA.",
            "x-example": "23681"
          },
          {
            "name": "integrationMessageType",
            "in": "query",
            "enum": [
              "Inbound",
              "Outbound"
            ],
            "x-example": "Inbound, Outbound",
            "required": false,
            "type": "string",
            "description": "Determines whether message is an inbound message or a outbound message",
            "uniqueItems": true
          },
          {
            "name": "integrationSystem",
            "in": "query",
            "enum": [
              "Central",
              "Property",
              "Both"
            ],
            "x-example": "Central, Property, Both",
            "required": false,
            "type": "string",
            "description": "Represents both OXI and OXI HUB are installed.",
            "uniqueItems": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch integration message details with xMLMsg string is returned in Base64 Encode.",
            "schema": {
              "$ref": "#/definitions/fetchIntegrationMessageAttachments"
            }
          },
          "204": {
            "description": "IntegrationMessageAttachments not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeContent"
        ]
      }
    },
    "/profileMatchRules": {
      "post": {
        "summary": "Create profile match rules",
        "description": "API to Create Profile Match Rules. <p><strong>OperationId:</strong>postProfileMatchRules</p>",
        "operationId": "postProfileMatchRules",
        "parameters": [
          {
            "name": "profileMatchRulesToBeCreated",
            "in": "body",
            "required": true,
            "description": "Request object for creating Profile Match Rules Configuration..",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileMatchRulesToBeCreated"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      },
      "put": {
        "summary": "Change profile match rules ",
        "description": "API to Modify Profile Match Rules. <p><strong>OperationId:</strong>putProfileMatchRules</p>",
        "operationId": "putProfileMatchRules",
        "parameters": [
          {
            "name": "profileMatchRulesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Profile Match Rules Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileMatchRulesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/changedProfileMatchRules"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaExchangeInterfaceConfig"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner’s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "automaticTransmissionSchedulesToBeCreated": {
      "type": "object",
      "properties": {
        "automaticTransmissionSchedules": {
          "description": "Collection of automatic transmission schedules that needs to be created.",
          "$ref": "#/definitions/automaticTransmissionSchedulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "automaticTransmissionSchedulesType": {
      "type": "array",
      "description": "List of automatic transmission schedules",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/automaticTransmissionScheduleType"
      }
    },
    "automaticTransmissionScheduleType": {
      "type": "object",
      "description": "Details which uniquely identifies transmission schedule",
      "properties": {
        "messageId": {
          "description": "Unique alpha numeric value which determines exact transmission schedule. Pass null when creating new transmission schedule",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "hotelId": {
          "description": "Hotel code for which the automatic transmission schedule is set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interface": {
          "description": "Interface configured for the property for which the automatic transmission schedule is set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "module": {
          "description": "Data model for which automatic transmission schedule is set.",
          "$ref": "#/definitions/automaticTransmissionScheduleModuleTypeType"
        },
        "frequency": {
          "description": "Frequency for automatic transmission schedule",
          "$ref": "#/definitions/automaticTransmissionScheduleFrequencyType"
        },
        "startDate": {
          "description": "Date from which transmission schedule has to run",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End date of transmission schedule",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactive": {
          "description": "Indicates whether automatic transmission is active or not",
          "type": "boolean"
        },
        "delta": {
          "description": "True to modify how the header and grid information sent in the RTAV message.",
          "type": "boolean"
        },
        "lastSend": {
          "description": "Date when last automatic transmission occurred.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "automaticTransmissionScheduleModuleTypeType": {
      "type": "string",
      "description": "Data modules that are currently supported",
      "enum": [
        "ARExport",
        "Block",
        "Inventory",
        "ProfileRequest",
        "ProfileDailyStats"
      ]
    },
    "automaticTransmissionScheduleFrequencyType": {
      "type": "object",
      "description": "Automatic transmission schedule frequency details",
      "properties": {
        "frequency": {
          "description": "How frequently transmission schedule has to run",
          "$ref": "#/definitions/automaticTransmissionScheduleFrequencyTypeType"
        },
        "hourToRun": {
          "description": "Hour of day that the transmission schedule has to run.",
          "type": "integer"
        },
        "weekDayToRun": {
          "description": "Days of the week on which the transmission schedule is to run.",
          "$ref": "#/definitions/daysOfWeekType"
        },
        "dayToRun": {
          "description": "Day of the month the transmission schedule is to run. Value should be between 1 and 31.",
          "type": "integer"
        },
        "monthToRun": {
          "description": "Number representing the month of year that the transmission schedule is to run. For example, 1 = January, 2 = February, 12 = December, etc.",
          "type": "integer"
        },
        "interval": {
          "description": "If frequency type is set to intervals then this value will be used to determine the frequency. For example if value is 18 then transmission will be sent every 18 minutes",
          "type": "integer"
        }
      }
    },
    "automaticTransmissionScheduleFrequencyTypeType": {
      "type": "string",
      "description": "Frequency for transmission such as Daily, Weekly, Monthly, Yearly and Interval settings",
      "enum": [
        "Daily",
        "Weekly",
        "Monthly",
        "Yearly",
        "Interval"
      ]
    },
    "daysOfWeekType": {
      "type": "string",
      "description": "Allowed values for the days of week type.",
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ]
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "communicationMethodsToBeChanged": {
      "type": "object",
      "properties": {
        "communicationMethods": {
          "description": "Collection of Communication Methods to be changed.",
          "$ref": "#/definitions/communicationMethodsEditType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "communicationMethodsEditType": {
      "type": "array",
      "description": "Contains new values along with associated old values to edit.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/communicationMethodEditType"
      }
    },
    "communicationMethodEditType": {
      "type": "object",
      "description": "Type represents the Communication Mehtod Base Type.",
      "properties": {
        "interfaceId": {
          "description": "OXI Interface ID",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "SID-RESORT for Global Level and HotelId associated with the interface for the Property Level configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "communicationType": {
          "description": "Communication Type like HTTP, None.",
          "$ref": "#/definitions/communicationType"
        },
        "communicationFlow": {
          "description": "Attribute represents the communication flow like UPLOAD,DOWNLOAD.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "newMethod": {
          "description": "New values for Communication Method.",
          "$ref": "#/definitions/communicationMethodType"
        }
      }
    },
    "communicationType": {
      "type": "string",
      "description": "Define values for Communication Types. e.g. NO_COMMUNICATION for None, HTTP for HTTP/S.",
      "enum": [
        "None",
        "Http"
      ]
    },
    "communicationMethodType": {
      "type": "object",
      "description": "Type represents the Communication Method Base Type.",
      "properties": {
        "interfaceId": {
          "description": "OXI Interface ID",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "SID-RESORT for Global Level and HotelId associated with the interface for the Property Level configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "communicationType": {
          "description": "Communication Type like HTTP, None.",
          "$ref": "#/definitions/communicationType"
        },
        "communicationFlow": {
          "description": "Attribute represents the communication flow like UPLOAD,DOWNLOAD.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "noCommunication": {
          "description": "Attribute represents Type None",
          "$ref": "#/definitions/communicationMethodNoneType"
        },
        "hTTPS": {
          "description": "Attribute represents Type HTTP",
          "$ref": "#/definitions/communicationMethodHTTPSType"
        },
        "allowedComTypes": {
          "description": "Attribute that indicates whether the communication type allowed or not.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displayText": {
          "description": "Attribute represents Description of Communication Flow",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "retryCount": {
          "description": "Attribute represents Retry Count",
          "type": "integer"
        },
        "retryInterval": {
          "description": "Attribute represents Interval in seconds between retries",
          "type": "integer"
        },
        "startTime": {
          "description": "Attribute represents Upload start time in HH:MI 24 hrs format",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "noOfDaysToKeep": {
          "description": "Attribute represents Number of days files to be kept in the backup folder",
          "type": "integer"
        },
        "versionNumber": {
          "description": "Attribute represents Version Number of the PM System.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "systemType": {
          "description": "Attribute represents System Type(Production/Test)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "chainCode": {
          "description": "Chain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "communicationMethodNoneType": {
      "type": "object",
      "description": "Type represents details of NONE Communication Type",
      "properties": {
        "sleepTime": {
          "description": "Attribute represents the Idle Time(in Minutes)",
          "type": "number"
        }
      }
    },
    "communicationMethodHTTPSType": {
      "type": "object",
      "description": "Type represents the Communication Type Base Details.",
      "properties": {
        "userName": {
          "description": "Attribute represents Username for Types HTTP",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "password": {
          "description": "Attribute represents Password for Types HTTP",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "sleepTime": {
          "description": "Attribute represents Idle Time(in Minutes) of HTTP,None",
          "type": "number"
        },
        "timeOut": {
          "description": "Attribute is used to indentify the TimeOut(in Seconds) of HTTP,None",
          "type": "number"
        },
        "address": {
          "description": "Attribute represents Address",
          "type": "string",
          "minLength": 0,
          "maxLength": 1028
        },
        "proxyAddress": {
          "description": "Attribute that represents Proxy URL",
          "type": "string",
          "minLength": 0,
          "maxLength": 1028
        },
        "compressData": {
          "description": "Attribute that indicates whether data to compressed or not",
          "type": "boolean"
        },
        "useClientCertificate": {
          "description": "Attribute that indicates whether to use client certificate or not",
          "type": "boolean"
        },
        "system": {
          "description": "System Type(Holidex specific) like Dev, UAT, Prod, Stage",
          "$ref": "#/definitions/systemType"
        },
        "locale": {
          "description": "Locale(Holidex specific) Values like US,EU",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "useVaultProxy": {
          "description": "Attribute that indicates whether to use Proxy URL or User configured URL.",
          "type": "boolean"
        },
        "allowCompressData": {
          "description": "Attribute that indicates whether to allow compress data or not.",
          "type": "boolean"
        }
      }
    },
    "systemType": {
      "type": "string",
      "description": "Defines values for System Type",
      "enum": [
        "Dev",
        "Uat",
        "Stage",
        "Prod"
      ]
    },
    "changedCommunicationMethods": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "conversionCodesStatusToBeChanged": {
      "type": "object",
      "properties": {
        "integrationSystem": {
          "description": "Central/Property",
          "$ref": "#/definitions/integrationSystemType"
        },
        "conversionCodesStatus": {
          "description": "Collection of Conversion Codes along with the status that should be updated.",
          "$ref": "#/definitions/conversionCodesStatusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "integrationSystemType": {
      "type": "string",
      "description": "Represents both OXI and OXI HUB are installed.",
      "enum": [
        "Central",
        "Property",
        "Both"
      ]
    },
    "conversionCodesStatusType": {
      "type": "array",
      "description": "Conversion Code and status information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/conversionCodeStatusType"
      }
    },
    "conversionCodeStatusType": {
      "type": "object",
      "description": "A common type contains basic information about Conversion Code.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the Property.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceId": {
          "description": "Identifier of the Interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "conversionCode": {
          "description": "Type of Conversion Code or user-defined function (UDF) module name configured in the system.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "uDFCode": {
          "description": "A flag that is true if the conversion code is an user-defined function (UDF) module code.",
          "type": "boolean"
        },
        "activate": {
          "description": "A flag that indicates whether the Conversion Code should be activated or inactivated.",
          "type": "boolean"
        }
      }
    },
    "changedConversionCodesStatus": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "externalInterfaceSetupsToBeCreated": {
      "type": "object",
      "properties": {
        "externalInterfaceSetups": {
          "description": "Values of the created External Interface Setups.",
          "$ref": "#/definitions/interfaceSetupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "interfaceSetupsType": {
      "type": "array",
      "description": "List of Interface Setups.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceSetupType"
      }
    },
    "interfaceSetupType": {
      "type": "object",
      "description": "Type represents ID one Interface Setup",
      "properties": {
        "interfaceId": {
          "description": "ID of the Interface Setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "Property for which the Interface Setup is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalHotelCode": {
          "description": "Corresponding property in the external system",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machine": {
          "description": "Logical Name of the machine that runs the OXIHUB",
          "type": "integer"
        },
        "description": {
          "description": "Detailed information about the interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "messageFormat": {
          "description": "Type of the message. (XML, TPI, AMF, etc.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "xMLVersions": {
          "description": "List of all XML Versions defined for the selected Property",
          "$ref": "#/definitions/interfaceSetupXMLVersionsType"
        },
        "databaseId": {
          "description": "Database ID",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceType": {
          "description": "Type of the interface (UPLOAD, DOWNLOAD, EXPORT, FTCRS, HOLIDEX, etc.,).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "externalSystemActivated": {
          "description": "Indicates if external system is active",
          "type": "boolean"
        },
        "systemType": {
          "description": "System Type of the interface like OXI, OXI-HUB, OG-SPA, OG-GAMING.",
          "$ref": "#/definitions/interfaceSystemType"
        },
        "batchProcessBE": {
          "description": "Select for all interfaces that send data from Opera to an external system.",
          "type": "boolean"
        },
        "zipData": {
          "description": "Compress all accumulated Business Events if true.",
          "type": "boolean"
        },
        "deltaMode": {
          "description": "Indicates external system does not send the full message for changes.",
          "type": "boolean"
        },
        "deletionIndicator": {
          "description": "Allows to set indicators for deleting data in the OPERA system from an incoming message. This is applicable only for Delta Interfaces, which indicates that the external system does not always send full data for a change. In this case OXI will leave data that is not sent in the message untouched in OPERA.",
          "$ref": "#/definitions/interfaceSetupMessageIndicatorType"
        },
        "keepingIndicator": {
          "description": "Allows to set indicators for keeping data in the OPERA system from an incoming message.",
          "$ref": "#/definitions/interfaceSetupMessageIndicatorType"
        },
        "orsDestination": {
          "description": "Indicates if interface is ORS destination.",
          "type": "boolean"
        },
        "xmlSchemaVersionsNegotiable": {
          "description": "Indicates if XML Versions Negotiable.",
          "type": "boolean"
        },
        "negotiateXmlSchemaVersion": {
          "description": "Indicates to set all XML Versions to Max version.",
          "type": "boolean"
        },
        "setAllToVersion": {
          "description": "XML Version to be used by all XLM schemas.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4
        }
      }
    },
    "interfaceSetupXMLVersionsType": {
      "type": "array",
      "description": "Collection of XMLTypes",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceSetupXMLVersionType"
      }
    },
    "interfaceSetupXMLVersionType": {
      "type": "object",
      "description": "Type representing one XML Type Version for one Interface Setup",
      "properties": {
        "xMLType": {
          "description": "XML Type for the current record",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "maximumVersion": {
          "description": "Maximum Version",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "version": {
          "description": "Version of the current XML Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 4
        }
      }
    },
    "interfaceSystemType": {
      "type": "string",
      "description": "Defines values for System Type of the interface",
      "enum": [
        "Oxi",
        "OxiHub",
        "OgSpa",
        "OgGaming",
        "Bexml",
        "Import",
        "WebServices"
      ]
    },
    "interfaceSetupMessageIndicatorType": {
      "type": "object",
      "description": "Type represents indicators for deleting/keeping data in the OPERA system from an incoming message.",
      "properties": {
        "characterIndicator": {
          "description": "Character Indicator",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "numericIndicator": {
          "description": "Numeric Indicator",
          "type": "number"
        },
        "dateIndicator": {
          "description": "Date Indicator.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fetchIntegrationInboundMessages": {
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of integration inbound messages matching the criteria provided in the request",
          "$ref": "#/definitions/integrationInboundMessagesType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "integrationInboundMessagesType": {
      "type": "array",
      "description": "List of integration inbound messages",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/integrationInboundMessageType"
      }
    },
    "integrationInboundMessageType": {
      "type": "object",
      "description": "Elements that uniquely identifies inbound message",
      "properties": {
        "messageId": {
          "description": "ID assigned for this message",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "enqueueTime": {
          "description": "TimeStamp of enqueue of message in OXI Monitoring tables (Inbound/Outbound).",
          "type": "string",
          "format": "date-time"
        },
        "dequeueTime": {
          "description": "TimeStamp of dequeue of message from OXI Monitoring tables (Inbound/Outbound).",
          "type": "string",
          "format": "date-time"
        },
        "interface": {
          "description": "The interface this message was created for",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "messageType": {
          "description": "This identifies the kind of message sent (e.g., reservation, profile, rate, block, rate restriction, inventory, and result)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "Property this message was sent from.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "messageStatus": {
          "description": "Status of the transmitted message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "reviewed": {
          "description": "Flag that tells whether the message is marked as reviewed or not",
          "type": "boolean"
        },
        "messageReference": {
          "description": "Integration message reference",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "messagePrimayInfo": {
          "description": "Information that was obtained in a message such as guest last/first name from a reservation message or block code from a block message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "notices": {
          "description": "List of errors or warnings that occurred",
          "$ref": "#/definitions/warningsType"
        },
        "attachmentExists": {
          "description": "Flag that tells whether the message has attachments or not",
          "type": "boolean"
        },
        "processStatus": {
          "description": "Status of the transmitted message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "retryCount": {
          "description": "Shows whether the processing of this message was retried and how many times.",
          "type": "integer"
        },
        "externalMessageKey": {
          "description": "Populated if external message key is available",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "externalHotelCode": {
          "description": "External system hotel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "fetchAutomaticTransmissionSchedules": {
      "type": "object",
      "properties": {
        "automaticTransmissonSchedules": {
          "description": "List of automatic transmission schedules that match the criteria specified in request",
          "$ref": "#/definitions/automaticTransmissionSchedulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "automaticTransmissionSchedulesToBeChanged": {
      "type": "object",
      "properties": {
        "automaticTransmissionSchedules": {
          "description": "Collection of automatic transmission schedules that needs to be changed.",
          "$ref": "#/definitions/automaticTransmissionSchedulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedAutomaticTransmissionSchedules": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchConversionCodes": {
      "type": "object",
      "properties": {
        "conversionCodes": {
          "description": "List of Conversion Codes that met the given search criteria.",
          "$ref": "#/definitions/conversionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "conversionCodesType": {
      "type": "array",
      "description": "List of Conversion Codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/conversionCodeType"
      }
    },
    "conversionCodeType": {
      "type": "object",
      "description": "A common type contains basic information about Conversion Code.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the Property.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceId": {
          "description": "Identifier of the Interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "conversionCode": {
          "description": "Type of Conversion Code or user-defined function (UDF) module name configured in the system.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "uDFCode": {
          "description": "A flag that is true if the conversion code is an user-defined function (UDF) module code.",
          "type": "boolean"
        },
        "label": {
          "description": "Label of the Conversion Code that is displayed in UI.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "description": {
          "description": "Description of the Conversion Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "active": {
          "description": "A field that distinguishes active and inactive Conversion Codes.",
          "type": "boolean"
        },
        "group": {
          "description": "XML Types for the Conversion Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "master": {
          "description": "Information about the master (if any) that the current code depends on.",
          "$ref": "#/definitions/conversionCodeMasterType"
        }
      }
    },
    "conversionCodeMasterType": {
      "type": "object",
      "description": "A type that holds details of master code, that the conversion code depends on.",
      "properties": {
        "code": {
          "description": "Value of the master code that the conversion code depends on.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "label": {
          "description": "Label of the master code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "fetchAccumulatedBusinessEvents": {
      "type": "object",
      "properties": {
        "businessEvents": {
          "description": "List of accumulated business events matching the criteria provided in the request",
          "$ref": "#/definitions/accumulatedBusinessEventsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "accumulatedBusinessEventsType": {
      "type": "array",
      "description": "List of accumulated business event messages",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/accumulatedBusinessEventType"
      }
    },
    "accumulatedBusinessEventType": {
      "type": "object",
      "description": "Business Event message details",
      "properties": {
        "primaryKey": {
          "description": "Primary Key identifier assigned to the business event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "status": {
          "description": "State of the business event.",
          "$ref": "#/definitions/accumulatedBusinessEventStatusType"
        },
        "createDate": {
          "description": "Data when the message was created by external systems",
          "type": "string",
          "format": "date-time"
        },
        "interface": {
          "description": "The interface this message was created for",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "module": {
          "description": "Data module of outgoing message. This identifies the kind of message sent (e.g., reservation, profile, rate, block, rate restriction, inventory, and result)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Property this message was sent from.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "accumulatedBusinessEventStatusType": {
      "type": "string",
      "description": "State of Accumulated Business Event",
      "enum": [
        "New",
        "Ready"
      ]
    },
    "conversionCodeMappingsToBeChanged": {
      "type": "object",
      "properties": {
        "integrationSystem": {
          "description": "Central/Property",
          "$ref": "#/definitions/integrationSystemType"
        },
        "conversionCodeMappings": {
          "description": "Conversion Code Mapping details that should be updated.",
          "$ref": "#/definitions/conversionCodeMappingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "conversionCodeMappingsType": {
      "type": "array",
      "description": "List of Conversion Code Mappings.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/conversionCodeMappingType"
      }
    },
    "conversionCodeMappingType": {
      "type": "object",
      "description": "A common type contains basic information about Conversion Code.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the Property.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceId": {
          "description": "Identifier of the Interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "conversionCode": {
          "description": "Type of Conversion Code or user-defined function (UDF) module name configured in the system.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "uDFCode": {
          "description": "A flag that is true if the conversion code is an user-defined function (UDF) module code.",
          "type": "boolean"
        },
        "id": {
          "description": "Conversion Code Detail Sequence Number, that uniquely identifies a mapping.",
          "type": "number"
        },
        "operaValue": {
          "description": "OPERA Code value or user-defined function (UDF) field name of the mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "externalValue": {
          "description": "A value in the External System that should be mapped to the corresponding OPERA Value or user-defined function (UDF) field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "operaColumn": {
          "description": "Name of the OPERA column that is used in the user-defined function (UDF) mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "externalFieldName": {
          "description": "Field name in the external system that is used in the user-defined function (UDF) mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "profileType": {
          "description": "Profile type of the user-defined function (UDF) definition.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "operaToExternalDefault": {
          "description": "When this is true, the External Value of current record is considered to be the default mapping value, where there are more than one mapping for OPERA Value.",
          "type": "boolean"
        },
        "externalToOperaDefault": {
          "description": "When this is true, the OPERA Value of current record is considered to be the default mapping value, where there are more than one mapping for the External System Value.",
          "type": "boolean"
        },
        "overrideExternalDefault": {
          "description": "A flag to indicate whether the current External Value should be considered as default, when there is already a default External Value mapped for the same OPERA Value.",
          "type": "boolean"
        },
        "overrideOperaDefault": {
          "description": "A flag to indicate whether the current OPERA Value should be considered as default, when there is already a default OPERA Value mapped for the same External Value.",
          "type": "boolean"
        },
        "active": {
          "description": "A flag to indicate whether the conversion code mapping is active in the system or not.",
          "type": "boolean"
        },
        "iFCCreated": {
          "description": "A flag to indicate whether this conversion was manually entered or IFC created.",
          "type": "boolean"
        },
        "masterValue": {
          "description": "Master Value for the Conversion Code Mapping (if any), to which the OPERA mapping value corresponds to. For user-defined function (UDF) mapping, this field represents the profile type of a profile UDF definition.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "changedConversionCodeMappings": {
      "type": "object",
      "properties": {
        "conversionCodeMappingStatus": {
          "description": "Type containing additional status information after creating or changing mappings.",
          "$ref": "#/definitions/conversionCodeMappingStatusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "conversionCodeMappingStatusType": {
      "type": "object",
      "description": "A type that holds status after creating/changing a conversion code mapping.",
      "properties": {
        "operaDefaultExists": {
          "description": "A flag that indicates if another Opera Value is marked as External->OPERA default for the same External Value mapping.",
          "type": "boolean"
        },
        "externalDefaultExists": {
          "description": "A flag that indicates if another External Value is marked as OPERA->External default for the same Opera Value mapping.",
          "type": "boolean"
        }
      }
    },
    "conversionCodeMappingsToBeCreated": {
      "type": "object",
      "properties": {
        "integrationSystem": {
          "description": "Central/Property",
          "$ref": "#/definitions/integrationSystemType"
        },
        "conversionCodeMappings": {
          "description": "Conversion Code Mapping details that should be created.",
          "$ref": "#/definitions/conversionCodeMappingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createdConversionCodeMappings": {
      "type": "object",
      "properties": {
        "conversionCodeMappingStatus": {
          "description": "Type containing additional status information after creating or changing mappings.",
          "$ref": "#/definitions/conversionCodeMappingStatusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchConversionCodeMappings": {
      "type": "object",
      "properties": {
        "conversionCodeMappings": {
          "description": "List of Conversion Code Mappings that met the given search criteria.",
          "$ref": "#/definitions/conversionCodeMappingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchIntegrationOutboundMessages": {
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of integration outbound messages matching the criteria provided in the request",
          "$ref": "#/definitions/integrationOutboundMessagesType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "integrationOutboundMessagesType": {
      "type": "array",
      "description": "List of integration outbound messages",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/integrationOutboundMessageType"
      }
    },
    "integrationOutboundMessageType": {
      "type": "object",
      "description": "Elements that uniquely identifies inbound message",
      "properties": {
        "messageId": {
          "description": "ID assigned for this message",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "enqueueTime": {
          "description": "TimeStamp of enqueue of message in OXI Monitoring tables (Inbound/Outbound).",
          "type": "string",
          "format": "date-time"
        },
        "dequeueTime": {
          "description": "TimeStamp of dequeue of message from OXI Monitoring tables (Inbound/Outbound).",
          "type": "string",
          "format": "date-time"
        },
        "interface": {
          "description": "The interface this message was created for",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "messageType": {
          "description": "This identifies the kind of message sent (e.g., reservation, profile, rate, block, rate restriction, inventory, and result)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "Property this message was sent from.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "messageStatus": {
          "description": "Status of the transmitted message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "reviewed": {
          "description": "Flag that tells whether the message is marked as reviewed or not",
          "type": "boolean"
        },
        "messageReference": {
          "description": "Integration message reference",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "messagePrimayInfo": {
          "description": "Information that was obtained in a message such as guest last/first name from a reservation message or block code from a block message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "notices": {
          "description": "List of errors or warnings that occurred",
          "$ref": "#/definitions/warningsType"
        },
        "attachmentExists": {
          "description": "Flag that tells whether the message has attachments or not",
          "type": "boolean"
        },
        "businessEventQueue": {
          "description": "If this message was triggered by business event then related information will be populated in this element.",
          "$ref": "#/definitions/pendingBusinessEventType"
        },
        "updateTime": {
          "description": "TimeStamp of change in message processing status (PROCESSED/FAILED/RESEND_SUCCESS/REJECT).",
          "type": "string",
          "format": "date-time"
        },
        "resultTime": {
          "description": "TimeStamp of receival of acknowledgement from external system (RESULT_SUCCESS/RESULT_FAILED).",
          "type": "string",
          "format": "date-time"
        },
        "deliveryTime": {
          "description": "TimeStamp of receival of http call status intiated by the OXI processor to deliver message to the external system.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pendingBusinessEventType": {
      "type": "object",
      "description": "Business event queue status common details",
      "properties": {
        "module": {
          "description": "Module name where the change occurred",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "externalSystem": {
          "description": "Name of the external system that the message was created for",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "actionType": {
          "description": "Type of action that the outbound message is pertaining to",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "actionId": {
          "description": "Action Id number that is automatically assigned to the action when it happened",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "enquiryDate": {
          "description": "Date when the business event change occurred",
          "type": "string",
          "format": "date-time"
        },
        "hotelId": {
          "description": "Hotel Code associated with business event",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "createdDate": {
          "description": "Date and time that the change happened",
          "type": "string",
          "format": "date-time"
        },
        "primaryKey": {
          "description": "Alpha-numeric key to uniquely identify the data applicable to that particular action",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "consumer": {
          "description": "Name of the external system that the message was created for and needs to picked up by.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "fetchInterfaceControls": {
      "type": "object",
      "properties": {
        "interfaceControlGroups": {
          "description": "Contains a collection of OXI Parameters/Settings, organized into groups.",
          "$ref": "#/definitions/interfaceControlGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "interfaceControlGroupsType": {
      "type": "array",
      "description": "OXI Parameters/Settings group.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceControlGroupType"
      }
    },
    "interfaceControlGroupType": {
      "type": "object",
      "description": "Type to group the different OXI Parameters/Settings.",
      "properties": {
        "groupName": {
          "description": "Group Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "displayName": {
          "description": "Group Display Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "interfaceControls": {
          "description": "Collection of OXI Parameters/Settings.",
          "$ref": "#/definitions/interfaceControlsType"
        }
      }
    },
    "interfaceControlsType": {
      "type": "array",
      "description": "OXI Parameters/Settings.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceControlType"
      }
    },
    "interfaceControlType": {
      "type": "object",
      "description": "Internal settings that can be of a certain valueType.",
      "properties": {
        "shortDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "wildCardMatch": {
          "description": "A flag which indicate whether a wild card search should be made.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "displayName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "$ref": "#/definitions/applicationSettingTypeType"
        },
        "hotelId": {
          "description": "Each configuration item will come with a HotelCode which will help the configuration to specify what context the update has to be. Eg. _Global,ORS,'CRO', etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "type": "number"
        },
        "editAllowed": {
          "type": "boolean"
        },
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "scope": {
          "type": "string",
          "enum": [
            "P",
            "G",
            "Ch",
            "C"
          ]
        },
        "valueType": {
          "type": "string",
          "enum": [
            "Yn",
            "Integer",
            "String",
            "SingleSelectLov",
            "MultiSelectLov",
            "ShuttleLov",
            "Custom",
            "Double",
            "Secure"
          ]
        },
        "conversionType": {
          "description": "Represents whether the value is OXI Parameter or Conversion code default.",
          "$ref": "#/definitions/applicationSettingConversionType"
        },
        "subscriptionCountEligible": {
          "description": "Indicator if the function does not count against the OPERA Control function count limit or not",
          "type": "boolean"
        },
        "settings": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/baseApplicationSettingType"
          }
        },
        "levelType": {
          "$ref": "#/definitions/applicationSettingLevelType"
        },
        "levelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceId": {
          "description": "Identifier of the Interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "useGlobal": {
          "description": "Flag indicating to use global inbound/outbound value for conversion code.",
          "type": "boolean"
        },
        "oxiParameterGroup": {
          "description": "V5 parameter group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "applicationSettingTypeType": {
      "type": "string",
      "enum": [
        "Function",
        "Parameter",
        "Setting"
      ]
    },
    "applicationSettingConversionType": {
      "type": "string",
      "enum": [
        "Default",
        "Parameter"
      ]
    },
    "baseApplicationSettingType": {
      "type": "object",
      "description": "Internal settings that can be of a certain valueType.",
      "properties": {
        "shortDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "wildCardMatch": {
          "description": "A flag which indicate whether a wild card search should be made.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "displayName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "$ref": "#/definitions/applicationSettingTypeType"
        },
        "hotelId": {
          "description": "Each configuration item will come with a HotelCode which will help the configuration to specify what context the update has to be. Eg. _Global,ORS,'CRO', etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "type": "number"
        },
        "editAllowed": {
          "type": "boolean"
        },
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "scope": {
          "type": "string",
          "enum": [
            "P",
            "G",
            "Ch",
            "C"
          ]
        },
        "valueType": {
          "type": "string",
          "enum": [
            "Yn",
            "Integer",
            "String",
            "SingleSelectLov",
            "MultiSelectLov",
            "ShuttleLov",
            "Custom",
            "Double",
            "Secure"
          ]
        },
        "conversionType": {
          "description": "Represents whether the value is OXI Parameter or Conversion code default.",
          "$ref": "#/definitions/applicationSettingConversionType"
        },
        "subscriptionCountEligible": {
          "description": "Indicator if the function does not count against the OPERA Control function count limit or not",
          "type": "boolean"
        }
      }
    },
    "applicationSettingLevelType": {
      "type": "string",
      "enum": [
        "Global",
        "Hotel",
        "Cro"
      ]
    },
    "messageStatistics": {
      "type": "object",
      "description": "Response element for Downloaded Messages statistics.",
      "properties": {
        "reports": {
          "description": "Interface Setup Details.",
          "type": "object",
          "properties": {
            "interfaceDetails": {
              "description": "Interface Setup Details.",
              "$ref": "#/definitions/interfaceSetupIDType"
            },
            "statReports": {
              "description": "Statistical report - each report is determined by the requested report in the service request criteria.",
              "$ref": "#/definitions/exchangeStatReportDetailsType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "interfaceSetupIDType": {
      "type": "object",
      "description": "Type represents ID one Interface Setup",
      "properties": {
        "interfaceId": {
          "description": "ID of the Interface Setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "Property for which the Interface Setup is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "exchangeStatReportDetailsType": {
      "type": "array",
      "description": "Exchange Interface Report Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/exchangeStatReportType"
      }
    },
    "exchangeStatReportType": {
      "type": "object",
      "description": "Concrete exchange interface report type.",
      "properties": {
        "stat": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/exchangeStatType"
          }
        },
        "reportCode": {
          "$ref": "#/definitions/exchangeStatReportCodeType"
        },
        "start": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "exchangeStatType": {
      "type": "object",
      "description": "Since the statistical value can be represented in different measure of units, this element will provide a flexible definition for the supported Opera9 statistical units.",
      "properties": {
        "unitType": {
          "description": "Unit of measurement or the actual code that defines the value. Eg. CurrencyCode for the Amount Category.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "unitValue": {
          "description": "Statistical value.",
          "type": "number"
        },
        "unitCategory": {
          "description": "Statistical unit category.",
          "$ref": "#/definitions/statUnitCategoryType"
        },
        "code": {
          "$ref": "#/definitions/exchangeStatCodeType"
        }
      }
    },
    "statUnitCategoryType": {
      "type": "string",
      "description": "Supported statistical units.",
      "enum": [
        "Numeric",
        "Amount"
      ]
    },
    "exchangeStatCodeType": {
      "type": "string",
      "description": "Supported Exchange Interface statistical codes.",
      "enum": [
        "Success",
        "Failed",
        "Warning",
        "Total"
      ]
    },
    "exchangeStatReportCodeType": {
      "type": "string",
      "description": "Supported Exchange Interface report codes.",
      "enum": [
        "UploadedMessages",
        "DownloadedMessages"
      ]
    },
    "OXIMessageStatistics": {
      "type": "object",
      "properties": {
        "messageStatisticsReport": {
          "description": "Message Statistical report.",
          "$ref": "#/definitions/messageStatisticsReportType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "messageStatisticsReportType": {
      "type": "array",
      "description": "Exchange interface message statistics report type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/messageStatisticsType"
      }
    },
    "messageStatisticsType": {
      "type": "object",
      "description": "Type for Message statistics Details.",
      "properties": {
        "interfaceId": {
          "description": "InterfaceId of the Messages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "Property of the Messages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "module": {
          "description": "Module name of messages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "actionType": {
          "description": "Action Type of the messages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "messageStatus": {
          "description": "Status of the messages.",
          "$ref": "#/definitions/oXIMessageStatusType"
        },
        "messageCount": {
          "description": "Number of the messages",
          "type": "integer"
        },
        "lastProcessedDate": {
          "description": "Last date on which messages are processed for given criteria.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "oXIMessageStatusType": {
      "type": "string",
      "description": "Supported Message Status.",
      "enum": [
        "Processed",
        "Failed",
        "Ready",
        "Expired"
      ]
    },
    "fetchCommunicationMethods": {
      "type": "object",
      "properties": {
        "communicationMethods": {
          "description": "Response which returns list of Communication Methods",
          "$ref": "#/definitions/communicationMethodsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "communicationMethodsType": {
      "type": "array",
      "description": "",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/communicationMethodType"
      }
    },
    "fetchExternalInterfaceSetups": {
      "type": "object",
      "properties": {
        "externalInterfaceSetups": {
          "description": "List of External Interface Setups that meet the criteria.",
          "$ref": "#/definitions/interfaceSetupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "externalInterfaceSetupsToBeChanged": {
      "type": "object",
      "properties": {
        "externalInterfaceSetups": {
          "description": "Values of the changed External Interface Setups.",
          "$ref": "#/definitions/interfaceSetupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedExternalInterfaceSetups": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "interfaceControlsToBeChanged": {
      "type": "object",
      "properties": {
        "integrationSystem": {
          "description": "Central(OXI HUB)/Property(OXI).",
          "$ref": "#/definitions/integrationSystemType"
        },
        "interfaceControls": {
          "description": "Contains a collection of OXI Parameters/Settings to update.",
          "$ref": "#/definitions/interfaceControlsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedInterfaceControls": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "legacyInterfaceStatusDetails": {
      "type": "object",
      "description": "Response object for fetch legacy interface status.",
      "properties": {
        "interfacesStatus": {
          "description": "Collection which contains interface Status.",
          "$ref": "#/definitions/interfacesStatusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "interfacesStatusType": {
      "type": "array",
      "description": "Collection which contains Interface ID and its details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceStatusType"
      }
    },
    "interfaceStatusType": {
      "type": "object",
      "description": "Type which holds the details of Interface.",
      "properties": {
        "interfaceId": {
          "description": "Interface ID for which processor will be started.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "Hotel Code which is associated with Interface ID will be processed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of Interface ID.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "processType": {
          "description": "Indicates the mode of processing Interface such as NT Service, DBMS Job.For DBMS Job, Database job will be scheduled to process.",
          "$ref": "#/definitions/interfaceStatusProcessTypeType"
        },
        "processRole": {
          "description": "Indicates that the Processor performs a role/function such as Upload , Download, Communication. The Interface with Upload role will upload Interface details to the External System and Download Role will download Interface Details from External System.",
          "$ref": "#/definitions/interfaceStatusProcessRoleType"
        },
        "status": {
          "description": "Status of the processor such as Stopped,Running,Exited and Disconnected.",
          "$ref": "#/definitions/exchangeInterfaceStatusType"
        },
        "command": {
          "description": "Command to perform a function Such as Start, Stop, Exit, Diagnostic,Restart.",
          "$ref": "#/definitions/exchangeInterfaceStatusCommandType"
        },
        "updatedTime": {
          "description": "Indicates time at which process started.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "user": {
          "description": "User who started the processor.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "systemType": {
          "description": "The System type for which Interface Setups have to be listed like OXI, OXIHub.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "interfaceStatusProcessTypeType": {
      "type": "string",
      "description": "Processor use Database Job.",
      "enum": [
        "NtService",
        "DbmsJob"
      ]
    },
    "interfaceStatusProcessRoleType": {
      "type": "string",
      "description": "FileExport process.",
      "enum": [
        "Upload",
        "Download",
        "Lookup",
        "Communication",
        "Resync",
        "FileExport"
      ]
    },
    "exchangeInterfaceStatusType": {
      "type": "string",
      "description": "Indicates that Interface process is disconnected.",
      "enum": [
        "Running",
        "Stopped",
        "Exited",
        "Disconnected"
      ]
    },
    "exchangeInterfaceStatusCommandType": {
      "type": "string",
      "description": "Command to restart Interface process.",
      "enum": [
        "Start",
        "Stop",
        "Exit",
        "Diagnostic",
        "Restart"
      ]
    },
    "fetchProfileMatchRules": {
      "type": "object",
      "properties": {
        "exchangeProfileMatchRules": {
          "description": "Collection of Exchange profile match rules to be fetched",
          "$ref": "#/definitions/exchangeProfileMatchRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "exchangeProfileMatchRulesType": {
      "type": "array",
      "description": "Type that holds collection of exchange profile match rules.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/exchangeProfileMatchRuleType"
      }
    },
    "exchangeProfileMatchRuleType": {
      "type": "object",
      "description": "Type that represents a rule to define point criteria and threshold.",
      "properties": {
        "threshold": {
          "description": "Threshold level of Match Point Criteria.",
          "type": "number"
        },
        "pointCriteria": {
          "description": "Set of point criteria to define match attributes, points and Active Flag.",
          "$ref": "#/definitions/pointCriteriaType"
        },
        "interfaceId": {
          "description": "Interface for which the rules are configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "Hotel for which the rules are configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "The type of profile for which rules are configured.",
          "$ref": "#/definitions/exchangeProfileTypeType"
        },
        "active": {
          "description": "The activation flag for the rule by itself.",
          "type": "boolean"
        }
      }
    },
    "pointCriteriaType": {
      "type": "array",
      "description": "Type that represents Criteria such as match attributes, points and Active Flag to match profiles.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/criterionType"
      }
    },
    "criterionType": {
      "type": "object",
      "description": "Type that represents Criteria such as match attributes, points and Active Flag for Profile Match Rule.",
      "properties": {
        "points": {
          "description": "Weighing points for the given match rule.",
          "type": "number"
        },
        "active": {
          "description": "The activation flag for the match rule criteria.",
          "type": "boolean"
        },
        "matchAttributes": {
          "description": "Rules defining the Attributes to match profiles (Ex: Passport number or First name, last name, Telephone or Telephone, Address or more) .",
          "$ref": "#/definitions/matchAttributesType"
        }
      }
    },
    "matchAttributesType": {
      "type": "array",
      "description": "Rules defining the match Attribute.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/matchAttributeTypeType"
      }
    },
    "matchAttributeTypeType": {
      "type": "string",
      "enum": [
        "AddressLine1",
        "ARNumber",
        "Birthday",
        "City",
        "ClientID",
        "CorpNumber",
        "Country",
        "CreditCard",
        "Email",
        "Fax",
        "FirstName",
        "IATANumber",
        "MembershipNumber",
        "LastName",
        "PassportNumber",
        "PhoneNumber",
        "PostalCode",
        "State",
        "SubscriptionID",
        "AlternateFirstName",
        "AlternateLastName"
      ],
      "description": "Profiles to match with Alternate Last Name. Alternate Last Name is not for OXI."
    },
    "exchangeProfileTypeType": {
      "type": "string",
      "description": "Represents Group profile type.",
      "enum": [
        "Guest",
        "Company",
        "TravelAgent",
        "Source",
        "Group"
      ]
    },
    "fetchOXIListOfValues": {
      "type": "object",
      "properties": {
        "listOfValues": {
          "description": "Collection of List of Value items.",
          "$ref": "#/definitions/listOfValuesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "listOfValuesType": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/itemType"
          }
        },
        "lOVName": {
          "description": "List of Values name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "itemCount": {
          "type": "integer"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "itemType": {
      "type": "object",
      "properties": {
        "iDs": {
          "$ref": "#/definitions/iDTypes"
        },
        "flexfields": {
          "description": "Flexfields returning list of name value pairs.",
          "$ref": "#/definitions/parametersType"
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "parentCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "color": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "imageURL": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "iDTypes": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/idType"
      }
    },
    "idType": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 20.",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "parametersType": {
      "type": "array",
      "description": "Collection of generic Name-Value-Pair parameters.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "parameterType": {
      "type": "object",
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "fetchIntegrationMessageAttachments": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Integration message additional details",
          "$ref": "#/definitions/integrationMessageAttachmentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "integrationMessageAttachmentsType": {
      "type": "object",
      "description": "This type holds additional details related to inbound messages like XML and External message",
      "properties": {
        "xMLMsg": {
          "description": "XML message details",
          "type": "string",
          "format": "byte"
        },
        "extMsg": {
          "description": "Orignal message from external systems(From the one's that don't create XML)",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "profileMatchRulesToBeCreated": {
      "type": "object",
      "properties": {
        "exchangeProfileMatchRules": {
          "description": "Collection of Exchange Profile Matching Rules can be created.",
          "$ref": "#/definitions/exchangeProfileMatchRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileMatchRulesToBeChanged": {
      "type": "object",
      "properties": {
        "exchangeProfileMatchRules": {
          "description": "Collection of Exchange Profile Matching Rules can be changed.",
          "$ref": "#/definitions/exchangeProfileMatchRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedProfileMatchRules": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "communicationMethods": {
      "type": "object",
      "properties": {
        "communicationDetails": {
          "type": "array",
          "description": "",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/communicationMethodType"
          }
        },
        "offset": {
          "description": "Indicates the index of the next applicable set(page).",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates number of records the API can return as per the API request limit sent. A maximum of 200 records can be only returned at a time.",
          "type": "integer"
        },
        "count": {
          "description": "Indicates number of records the API has returned actually as per the API request criteria.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether there are more records available to be returned as per the API request criteria or not.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Indicates total number of records available that can be returned as per the API request criteria.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "OperaExchangeContent",
      "description": "The OPERA Exchange Content Service offers capability to manage big content using MTOM."
    },
    {
      "name": "OperaExchangeInterfaceConfig",
      "description": "The Opera Exchange Interface Configuration module offers capability of managing, and retrieving interface information."
    },
    {
      "name": "OperaExchangeInterfaceStats",
      "description": "Opera Exchange Interface Stats provides statistical data of Uploaded and Downloaded messages for OperaExchangeInterface."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}